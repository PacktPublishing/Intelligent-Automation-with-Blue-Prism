<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>1.1</bpr:name>
    <bpr:release-notes />
    <bpr:created>2023-06-04 13:49:33Z</bpr:created>
    <bpr:package-id>2012</bpr:package-id>
    <bpr:package-name>Ch4 - Example 3</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="6">
        <object id="104d778a-c54f-4a9b-8ddd-aba418123b79" name="Ch4 - Example 3 - Sentiment Analysis for User Reviews" xmlns="http://www.blueprism.co.uk/product/process"><process name="Ch4 - Example 3 - Sentiment Analysis for User Reviews" version="1.0" bpversion="7.1.2.3518" narrative="This is a refactored example which better follows Blue Prism's best practices around logging and reusability." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>87f8bbf4-a950-4694-b82d-3230872f0176</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>160</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="d10d3181-21ec-46d9-91cd-f4125dfb4aa5" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-180</camerax><cameray>60</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="db603337-a795-4f41-9427-018f7597134d" type="Normal" published="True"><name>Load Training Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5ae683c1-8236-4492-aafe-224e44fd5732" type="Normal" published="True"><name>Train Model</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="696f8861-47ee-49f9-b65f-ce9c3f4d50c0" type="Normal" published="True"><name>Get Model Metrics</name><view><camerax>0</camerax><cameray>126</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1bd408e7-3b18-4011-8c8a-a35b7660cd1c" type="Normal" published="True"><name>Save Trained Model To File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c2551803-297a-4a4a-aa3a-265e97c58b1e" type="Normal" published="True"><name>Predict</name><view><camerax>0</camerax><cameray>82</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f0de962a-b6d5-4b44-b0d1-c61bb64a3f8f" type="Normal" published="True"><name>Prediction Model Exists?</name><view><camerax>0</camerax><cameray>24</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="0dde5931-c691-4947-97aa-43a15c8f8f68" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>5079a55b-b3cc-4dc5-ab46-91729e45f49f</onsuccess></stage><stage stageid="5079a55b-b3cc-4dc5-ab46-91729e45f49f" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="9e6f6146-a0fb-4d42-8dc2-6fca0ab22039" name="Stage1" type="ProcessInfo"><display x="-180" y="-120" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.ML.dll</reference><reference>Microsoft.ML.Data.dll</reference><reference>netstandard.dll</reference><reference>Microsoft.ML.DataView.dll</reference><reference>Microsoft.ML.Core.dll</reference><reference>Microsoft.ML.Transforms.dll</reference><reference>Microsoft.ML.StandardTrainers.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>Microsoft.ML</import><import>Microsoft.ML.Data</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[static MLContext mlContext = new MLContext(); //used for training
static ITransformer trainedModel;
static IDataView trainingData; //the split for training data
static IDataView testData; //the split for test data

static MLContext predictionContext = new MLContext(); //used for prediction
static ITransformer predictionModel;

public class SentimentIssue
{
	[LoadColumn(0)]
	public bool Label { get; set; }
	[LoadColumn(2)]
	public string Text { get; set; }
}
public class SentimentPrediction
{
	// ColumnName attribute is used to change the column name from
	// its default value, which is the name of the field.
	[ColumnName("PredictedLabel")]
	public bool Prediction { get; set; }

	// No need to specify ColumnName attribute, because the field
	// name "Probability" is the column name we want.
	public float Probability { get; set; }

	public float Score { get; set; }
}

]]></code></stage><stage stageid="2abba2da-c94a-4f5d-847d-65b3eef82876" name="Clean Up" type="SubSheetInfo"><subsheetid>d10d3181-21ec-46d9-91cd-f4125dfb4aa5</subsheetid><display x="-180" y="-105" w="150" h="90" /></stage><stage stageid="108f6776-669c-41fc-b4e6-e15a622f92a9" name="Start" type="Start"><subsheetid>d10d3181-21ec-46d9-91cd-f4125dfb4aa5</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>3d6c0ae7-f838-448b-8b9a-1a484775325c</onsuccess></stage><stage stageid="3d6c0ae7-f838-448b-8b9a-1a484775325c" name="End" type="End"><subsheetid>d10d3181-21ec-46d9-91cd-f4125dfb4aa5</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="f102c0e8-6228-440e-a82e-2d115ce2b1a9" name="" type="Note"><subsheetid>d10d3181-21ec-46d9-91cd-f4125dfb4aa5</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="9caa6010-92b1-4e73-b785-54c7bc56d32c" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="ae611220-b1b4-4372-a9d7-0a814d03a66c" name="Ch4 Test Split Fraction" type="Data"><loginhibit /><narrative>A fraction of how much testing data you want</narrative><display x="165" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>0.2</initialvalue><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="e2642f8a-2bbe-4878-be0d-791ceba25c98" name="Predict" type="SubSheetInfo"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><narrative>Make a prediction of whether a phrase is Toxic or not. Loads an existing model from disk.</narrative><display x="-195" y="-120" w="150" h="90" /></stage><stage stageid="51170aed-2efb-41b3-90c8-d534fb4b66da" name="Start" type="Start"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit /><preconditions><condition narrative="The model file .zip must already exist" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="Input Sentence" narrative="The phrase to run the prediction against" stage="Input Sentence" /></inputs><onsuccess>2b3ed58c-ec56-4c11-8e6a-77e939a1999d</onsuccess></stage><stage stageid="9d52812e-c3ca-419a-b675-5169dfd390a9" name="End" type="End"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit /><display x="15" y="120" /><outputs><output type="text" name="Error Message" narrative="The error message from the code stage" stage="Error Message" /><output type="text" name="Error Stack Trace" narrative="The error stack trace from the code stage" stage="Error Stack Trace" /><output type="flag" name="Success" narrative="Whether the code stage completed successfully or not" stage="Success" /><output type="text" name="Label" narrative="Either Toxic or Non-Toxic" stage="Label" /><output type="number" name="Probability" narrative="The confidence of the predicted label" stage="Probability" /></outputs></stage><stage stageid="21f0d9c6-f392-4834-8527-a1d2a1909ee3" name="Predict from Prediction Model" type="Code"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="text" name="Model Full Path" expr="[Ch4 Prediction Model Full Path]" /><input type="text" name="Input Sentence" expr="[Input Sentence]" /></inputs><outputs><output type="text" name="Error Message" stage="Error Message" /><output type="text" name="Error Stack Trace" stage="Error Stack Trace" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Label" stage="Label" /><output type="number" name="Probability" stage="Probability" /></outputs><onsuccess>9d52812e-c3ca-419a-b675-5169dfd390a9</onsuccess><code><![CDATA[Error_Message = "";
Error_Stack_Trace = "";
Success = false;
Label = "";
Probability = 0;

try {
	DataViewSchema modelSchema;

	// Load trained model
	predictionModel = predictionContext.Model.Load(Model_Full_Path, out modelSchema);

	// TRY IT: Make a single test prediction, loading the model from .ZIP file
	SentimentIssue sampleStatement = new SentimentIssue { Text = Input_Sentence };

	// Create prediction engine related to the loaded trained model
	var predEngine = predictionContext.Model.CreatePredictionEngine<SentimentIssue, SentimentPrediction>(predictionModel);

	// Score
	var resultprediction = predEngine.Predict(sampleStatement);
	Label =  resultprediction.Prediction ? "Toxic" : "Non Toxic";
	if(Label == "Toxic") {
		Probability = (decimal)resultprediction.Probability;
	} else {
		Probability = 1 - (decimal)resultprediction.Probability;
	}
	Success = true;
} catch(Exception e) {
	Error_Message = e.Message;
	Error_Stack_Trace = e.ToString();
}
]]></code></stage><stage stageid="302c0840-f899-4076-9747-8392fc504d8b" name="Ch4 Training Data Full Path" type="Data"><loginhibit /><display x="165" y="-105" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">c:/Users/Public/Data/wikiDetoxAnnotated40kRows.tsv</initialvalue><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="266c3f2d-bb87-4f15-accb-8ca856f56edf" name="Ch4 Trained Model Full Path" type="Data"><loginhibit /><display x="165" y="-75" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">c:/Users/Public/MLModels/SentimentModel.zip</initialvalue><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="1234bc2c-80d0-443c-8ca9-3660df060708" name="Save Trained Model To File" type="SubSheetInfo"><subsheetid>1bd408e7-3b18-4011-8c8a-a35b7660cd1c</subsheetid><narrative>Saves the model to a .zip file. The save location is specific by an environment variable.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="506ebd32-48ff-49a2-ad85-f17d957043ba" name="Start" type="Start"><subsheetid>1bd408e7-3b18-4011-8c8a-a35b7660cd1c</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>061cb583-fa8c-4867-b1e5-c61a9bc62567</onsuccess></stage><stage stageid="ec5cf62b-739f-4534-8ffe-3b382a45e5db" name="Saved Model Exists?" type="Decision"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><decision expression="[Exists]" /><ontrue>87476495-c94f-422e-b3c5-47332882971f</ontrue><onfalse>2511f97e-5772-4e17-9bde-dae2b99d7230</onfalse></stage><stage stageid="2b3ed58c-ec56-4c11-8e6a-77e939a1999d" name="Utility - File Management::File Exists" type="Action"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="File Name" friendlyname="File Name" narrative="The name of the file to check" expr="[Ch4 Prediction Model Full Path]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the file exists" stage="Exists" /></outputs><onsuccess>ec5cf62b-739f-4534-8ffe-3b382a45e5db</onsuccess><resource object="Utility - File Management" action="File Exists" /></stage><stage stageid="d05daa53-9575-4222-8983-55db524334f9" name="Exists" type="Data"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="135" y="-60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2511f97e-5772-4e17-9bde-dae2b99d7230" name="SE - Saved Model Missing" type="Exception"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="150" y="-15" w="90" h="30" /><exception localized="yes" type="System Exception" detail="&quot;SE - Saved Model Missing: &quot; &amp; [Ch4 Prediction Model Full Path]" /></stage><stage stageid="42135843-ce2b-496b-92cc-c30f9d73432b" name="Ch4 Prediction Model Full Path" type="Data"><loginhibit /><display x="165" y="-45" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">c:/Users/Public/MLModels/SentimentModel.zip</initialvalue><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="7378a105-ac6a-4d3c-a4a0-1168bd5bbaa6" name="Global Environment Variables" type="Block"><loginhibit /><display x="75" y="-135" w="180" h="150" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="206b7193-1fcb-44d5-9034-b60aaa56dcad" name="Load Training Data" type="SubSheetInfo"><subsheetid>db603337-a795-4f41-9427-018f7597134d</subsheetid><narrative>Also perform the train/test split</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a8535edd-f58a-4d80-922f-0b1fe09a1ea5" name="Start" type="Start"><subsheetid>db603337-a795-4f41-9427-018f7597134d</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>489ee427-dc9a-4a79-9e09-f3a4717bba47</onsuccess></stage><stage stageid="489ee427-dc9a-4a79-9e09-f3a4717bba47" name="Load and Split Data" type="Code"><subsheetid>db603337-a795-4f41-9427-018f7597134d</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Data Path" expr="[Ch4 Training Data Full Path]" /><input type="number" name="Test Split Fraction" expr="[Ch4 Test Split Fraction]" /></inputs><outputs><output type="text" name="Error Message" stage="Error Message" /><output type="text" name="Error Stack Trace" stage="Error Stack Trace" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>7dc6d5f8-95aa-46db-a434-00443d04f171</onsuccess><code><![CDATA[Error_Message = "";
Error_Stack_Trace = "";
Success = false;

try {
	// STEP 1: Common data loading configuration
	IDataView dataView = mlContext.Data.LoadFromTextFile<SentimentIssue>(Data_Path, hasHeader: true);

	Microsoft.ML.DataOperationsCatalog.TrainTestData trainTestSplit = mlContext.Data.TrainTestSplit(dataView, testFraction: Decimal.ToDouble(Test_Split_Fraction));
	trainingData = trainTestSplit.TrainSet;
	testData = trainTestSplit.TestSet;
	Success = true;
} catch(Exception e) {
	Error_Message = e.Message;
	Error_Stack_Trace = e.ToString();
}]]></code></stage><stage stageid="e8d32d11-6e21-43ec-8a4f-2a84e49b47ab" name="Train Model" type="SubSheetInfo"><subsheetid>5ae683c1-8236-4492-aafe-224e44fd5732</subsheetid><narrative>Actually train the model</narrative><display x="-135" y="-105" w="150" h="90" /></stage><stage stageid="aba916bb-f0d4-42c6-8ca6-6f3a5de78863" name="Start" type="Start"><subsheetid>5ae683c1-8236-4492-aafe-224e44fd5732</subsheetid><loginhibit /><preconditions><condition narrative="The training data must be loaded." /></preconditions><display x="15" y="-105" /><onsuccess>20b2b07e-7bf0-4b74-84f7-66db63fe295f</onsuccess></stage><stage stageid="20b2b07e-7bf0-4b74-84f7-66db63fe295f" name="Train Model" type="Code"><subsheetid>5ae683c1-8236-4492-aafe-224e44fd5732</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Error Message" stage="Error Message" /><output type="text" name="Error Stack Trace" stage="Error Stack Trace" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>b98fbe5f-7deb-4f4f-a6db-3d27e1b9ed46</onsuccess><code><![CDATA[Error_Message = "";
Error_Stack_Trace = "";
Success = false;

try {
	// STEP 2: Common data process configuration with pipeline data transformations          
	var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: "Features", inputColumnName: nameof(SentimentIssue.Text));

	// STEP 3: Set the training algorithm, then create and config the modelBuilder                            
	var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: "Label", featureColumnName: "Features");
	var trainingPipeline = dataProcessPipeline.Append(trainer);

	// STEP 4: Train the model fitting to the DataSet
	trainedModel = trainingPipeline.Fit(trainingData);
	Success = true;
} catch(Exception e) {
	Error_Message = e.Message;
	Error_Stack_Trace = e.ToString();
}]]></code></stage><stage stageid="dc8403f5-fada-4a9d-8e4e-3ea8ea37852f" name="Get Model Metrics" type="SubSheetInfo"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><narrative>Get the different metrics of the trained model.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="df3b81d0-9bcc-4e04-a34d-529495c86e46" name="Start" type="Start"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><loginhibit /><preconditions><condition narrative="The model must be trained" /></preconditions><display x="15" y="-105" /><onsuccess>320ae609-5aaf-49dc-8339-4b6190f830e6</onsuccess></stage><stage stageid="320ae609-5aaf-49dc-8339-4b6190f830e6" name="Get Model Metrics" type="Code"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Error Message" stage="Error Message" /><output type="text" name="Error Stack Trace" stage="Error Stack Trace" /><output type="flag" name="Success" stage="Success" /><output type="number" name="Accuracy" stage="Accuracy" /><output type="number" name="AUC" stage="AUC" /><output type="number" name="AUPRC" stage="AUPRC" /><output type="number" name="F1" stage="F1" /><output type="number" name="LogLoss" stage="LogLoss" /><output type="number" name="LogLossReduction" stage="LogLossReduction" /><output type="number" name="PositivePrecision" stage="PositivePrecision" /><output type="number" name="PositiveRecall" stage="PositiveRecall" /><output type="number" name="NegativePrecision" stage="NegativePrecision" /><output type="number" name="NegativeRecall" stage="NegativeRecall" /></outputs><onsuccess>2e8b89b0-8786-4da8-a112-711ca2e63205</onsuccess><code><![CDATA[Error_Message = "";
Error_Stack_Trace = "";
Success = false;

Accuracy = 0;
AUC = 0;
AUPRC = 0;
F1 = 0;
LogLoss = 0;
LogLossReduction = 0;
PositivePrecision = 0;
PositiveRecall = 0;
NegativePrecision = 0;
NegativeRecall = 0;

try {
	// STEP 5: Evaluate the model and show accuracy stats
	var predictions = trainedModel.Transform(testData);
	var metrics = mlContext.BinaryClassification.Evaluate(data: predictions, labelColumnName: "Label", scoreColumnName: "Score");
	Accuracy = (decimal)metrics.Accuracy;
	AUC = (decimal)metrics.AreaUnderRocCurve;
	AUPRC = (decimal)metrics.AreaUnderPrecisionRecallCurve;
	F1 = (decimal)metrics.F1Score;
	LogLoss = (decimal)metrics.LogLoss;
	LogLossReduction = (decimal)metrics.LogLossReduction;
	PositivePrecision = (decimal)metrics.PositivePrecision;
	PositiveRecall = (decimal)metrics.PositiveRecall;
	NegativePrecision = (decimal)metrics.NegativePrecision;
	NegativeRecall = (decimal)metrics.NegativeRecall;
	
	Success = true;
} catch(Exception e) {
	Error_Message = e.Message;
	Error_Stack_Trace = e.ToString();
}]]></code></stage><stage stageid="0f95d325-28c5-4218-ab4d-48c55f0f5306" name="Accuracy" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e9608d0-6c85-44e0-9b83-d298d1b577ee" name="AUC" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="31ef80c6-74a7-4686-b454-7b36617a5925" name="AUPRC" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="802c288d-317e-427d-8022-47c3aa034f47" name="F1" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aec37d90-45c5-42af-9f63-65daff0964ef" name="LogLossReduction" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="508ac7e9-83de-407b-8d6c-48898797ad73" name="PositivePrecision" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3bb6a9ed-210b-4b13-b704-af2b4fb4c286" name="PositiveRecall" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="210" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7fa8c43b-6a69-4a4c-8da5-d8985c515cc0" name="NegativePrecision" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="240" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="614c5ab5-41a0-482b-b19e-50d12eb1ec32" name="NegativeRecall" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="270" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c16090da-1a68-4037-b8f5-92ae2e1358d7" name="LogLoss" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fa5bffc6-5ad7-43c6-a6c2-c7195c8adc9d" name="Output Metrics" type="Block"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="330" /></stage><stage stageid="061cb583-fa8c-4867-b1e5-c61a9bc62567" name="Save Trained Model" type="Code"><subsheetid>1bd408e7-3b18-4011-8c8a-a35b7660cd1c</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Model Full Path" expr="[Ch4 Trained Model Full Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /><output type="text" name="Error Stack Trace" stage="Error Stack Trace" /></outputs><onsuccess>68cf73d7-7b23-4600-b394-462ca792dff0</onsuccess><code><![CDATA[Error_Message = "";
Error_Stack_Trace = "";
Success = false;

try {
	// STEP 6: Save/persist the trained model to a .ZIP file
	mlContext.Model.Save(trainedModel, trainingData.Schema, Model_Full_Path);
	Success = true; 
} catch(Exception e) {
	Error_Message = e.Message;
	Error_Stack_Trace = e.ToString();
}]]></code></stage><stage stageid="8985a088-ccbf-4de9-9617-6acea60e714e" name="Error Stack Trace" type="Data"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="314fcedb-1018-4c1d-91c3-13ad7c91a2c5" name="Success" type="Data"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="-195" y="210" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aeaa9d5b-3dce-4a20-8362-1b14273d2366" name="Error Message" type="Data"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dbce4ccd-7ec1-4daf-9ad0-ae745273c70c" name="Input Sentence" type="Data"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">This tastes great!</initialvalue><private /><alwaysinit /></stage><stage stageid="87476495-c94f-422e-b3c5-47332882971f" name="Empty Sentence?" type="Decision"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><decision expression="Trim([Input Sentence]) = &quot;&quot;" /><ontrue>ef3b5bf3-0341-4964-96d5-5587ed681ae3</ontrue><onfalse>21f0d9c6-f392-4834-8527-a1d2a1909ee3</onfalse></stage><stage stageid="ef3b5bf3-0341-4964-96d5-5587ed681ae3" name="SE - Empty Sentence" type="Exception"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="150" y="30" w="90" h="30" /><exception localized="yes" type="System Exception" detail="&quot;SE - The Input Sentence is empty&quot;" /></stage><stage stageid="de2ddce8-5fe8-460a-b385-870f4fc0cd7f" name="Label" type="Data"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="131ceb69-bfab-45e5-816b-252dbceb1ace" name="Probability" type="Data"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5b9b7dc8-ec75-4222-9dc7-34daed7aeb06" name="Predictions" type="Block"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit /><display x="-270" y="15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CC99FF" /></stage><stage stageid="cf59f9d2-3351-413e-a021-bd8bb7b90c67" name="Code Stage Outputs" type="Block"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1d43d4c0-e33f-4081-9aad-7f59c8f98597" name="Inputs" type="Block"><subsheetid>c2551803-297a-4a4a-aa3a-265e97c58b1e</subsheetid><loginhibit /><display x="-270" y="-60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="9399f5cf-8517-417b-8ee0-5e095f6abd40" name="Error Stack Trace" type="Data"><subsheetid>1bd408e7-3b18-4011-8c8a-a35b7660cd1c</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="06c3f2cf-88fa-40ff-b704-a989845c79ed" name="Success" type="Data"><subsheetid>1bd408e7-3b18-4011-8c8a-a35b7660cd1c</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd31a0fd-10c9-4663-b90c-a8ffe631abcd" name="Error Message" type="Data"><subsheetid>1bd408e7-3b18-4011-8c8a-a35b7660cd1c</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a30c487d-fcc2-4899-99e6-85f795441c82" name="Code Stage Outputs" type="Block"><subsheetid>1bd408e7-3b18-4011-8c8a-a35b7660cd1c</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="68cf73d7-7b23-4600-b394-462ca792dff0" name="End" type="End"><subsheetid>1bd408e7-3b18-4011-8c8a-a35b7660cd1c</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="text" name="Error Message" narrative="The error message from the code stage" stage="Error Message" /><output type="text" name="Error Stack Trace" narrative="The error stack trace from the code stage" stage="Error Stack Trace" /><output type="flag" name="Success" narrative="Whether the code stage completed successfully or not" stage="Success" /></outputs></stage><stage stageid="7b11f109-afde-442f-931e-61bf62fe2c98" name="Error Stack Trace" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="375" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4e3784c-c22a-4ec0-8c32-774fdf4e6a71" name="Success" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="405" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f99e70e-65af-4c29-a7dd-699ac4b04100" name="Error Message" type="Data"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><display x="-195" y="345" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fb70bbe5-2abd-482b-b8a7-d71cc0064ccd" name="Code Stage Outputs" type="Block"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><loginhibit /><display x="-270" y="315" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2e8b89b0-8786-4da8-a112-711ca2e63205" name="End" type="End"><subsheetid>696f8861-47ee-49f9-b65f-ce9c3f4d50c0</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="text" name="Error Message" narrative="The error message from the code stage" stage="Error Message" /><output type="text" name="Error Stack Trace" narrative="The error stack trace from the code stage" stage="Error Stack Trace" /><output type="flag" name="Success" narrative="Whether the code stage completed successfully or not" stage="Success" /><output type="number" name="Accuracy" stage="Accuracy" /><output type="number" name="AUC" narrative="Area Under the Curve" stage="AUC" /><output type="number" name="AUPRC" stage="AUPRC" /><output type="number" name="F1" stage="F1" /><output type="number" name="LogLoss" stage="LogLoss" /><output type="number" name="LogLossReduction" stage="LogLossReduction" /><output type="number" name="NegativePrecision" stage="NegativePrecision" /><output type="number" name="NegativeRecall" stage="NegativeRecall" /><output type="number" name="PositivePrecision" stage="PositivePrecision" /><output type="number" name="PositiveRecall" stage="PositiveRecall" /></outputs></stage><stage stageid="5104ef10-c795-44ef-8f5d-153b3690ee46" name="Error Stack Trace" type="Data"><subsheetid>5ae683c1-8236-4492-aafe-224e44fd5732</subsheetid><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="55d81711-e53a-4769-9774-1693e1a9e6f6" name="Success" type="Data"><subsheetid>5ae683c1-8236-4492-aafe-224e44fd5732</subsheetid><display x="-135" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="deb3e43a-06ac-4b80-a85f-5f61b552142d" name="Error Message" type="Data"><subsheetid>5ae683c1-8236-4492-aafe-224e44fd5732</subsheetid><display x="-135" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16a1393e-5035-413e-9b96-6e4d31d99504" name="Code Stage Outputs" type="Block"><subsheetid>5ae683c1-8236-4492-aafe-224e44fd5732</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b98fbe5f-7deb-4f4f-a6db-3d27e1b9ed46" name="End" type="End"><subsheetid>5ae683c1-8236-4492-aafe-224e44fd5732</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="text" name="Error Message" narrative="The error message from the code stage" stage="Error Message" /><output type="text" name="Error Stack Trace" narrative="The error stack trace from the code stage" stage="Error Stack Trace" /><output type="flag" name="Success" narrative="Whether the code stage completed successfully or not" stage="Success" /></outputs></stage><stage stageid="397c9116-fd28-4ac1-b83d-fa6d55041a11" name="Error Stack Trace" type="Data"><subsheetid>db603337-a795-4f41-9427-018f7597134d</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="885039ad-1535-4fb7-b81f-e6ece338be32" name="Success" type="Data"><subsheetid>db603337-a795-4f41-9427-018f7597134d</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5336216b-e8c9-4bd4-8ae9-81e1ea2ae9d8" name="Error Message" type="Data"><subsheetid>db603337-a795-4f41-9427-018f7597134d</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="408642e5-9cea-4797-8e09-f98d26433909" name="Code Stage Outputs" type="Block"><subsheetid>db603337-a795-4f41-9427-018f7597134d</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7dc6d5f8-95aa-46db-a434-00443d04f171" name="End" type="End"><subsheetid>db603337-a795-4f41-9427-018f7597134d</subsheetid><loginhibit /><display x="15" y="0" /><outputs><output type="text" name="Error Message" narrative="The error message from the code stage" stage="Error Message" /><output type="text" name="Error Stack Trace" narrative="The error stack trace from the code stage" stage="Error Stack Trace" /><output type="flag" name="Success" narrative="Whether the code stage completed successfully or not" stage="Success" /></outputs></stage><stage stageid="b2aecb76-02de-40c9-bf2d-b4ee699cea1c" name="Prediction Model Exists?" type="SubSheetInfo"><subsheetid>f0de962a-b6d5-4b44-b0d1-c61bb64a3f8f</subsheetid><narrative>Returns true if the prediction model file exists</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b55af461-4664-451a-84dd-7cefac2f9345" name="Start" type="Start"><subsheetid>f0de962a-b6d5-4b44-b0d1-c61bb64a3f8f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>73d2f9b3-cb1b-402f-90ec-348743dd8748</onsuccess></stage><stage stageid="310722ec-4fa3-4416-b440-c9a2c4abb790" name="End" type="End"><subsheetid>f0de962a-b6d5-4b44-b0d1-c61bb64a3f8f</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="flag" name="Exists" stage="Exists" /></outputs></stage><stage stageid="49b2df70-e8e9-4b28-92ee-0e781e04964c" name="Outputs" type="Block"><subsheetid>f0de962a-b6d5-4b44-b0d1-c61bb64a3f8f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /></stage><stage stageid="73d2f9b3-cb1b-402f-90ec-348743dd8748" name="Utility - File Management::File Exists" type="Action"><subsheetid>f0de962a-b6d5-4b44-b0d1-c61bb64a3f8f</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="File Name" friendlyname="File Name" narrative="The name of the file to check" expr="[Ch4 Prediction Model Full Path]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the file exists" stage="Exists" /></outputs><onsuccess>310722ec-4fa3-4416-b440-c9a2c4abb790</onsuccess><resource object="Utility - File Management" action="File Exists" /></stage><stage stageid="86e26fff-2291-43c2-872b-fa12da0efe21" name="Exists" type="Data"><subsheetid>f0de962a-b6d5-4b44-b0d1-c61bb64a3f8f</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <environment-variable id="Ch4 Prediction Model Full Path" name="Ch4 Prediction Model Full Path" type="text" value="c:/Users/Public/MLModels/SentimentModel.zip" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>The full path to the trained model that we want to use for prediction, in .zip format</description>
        </environment-variable>
        <environment-variable id="Ch4 Test Split Fraction" name="Ch4 Test Split Fraction" type="number" value="0.2" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>The fraction of data to use for testing data. Between 0 and 1</description>
        </environment-variable>
        <environment-variable id="Ch4 Trained Model Full Path" name="Ch4 Trained Model Full Path" type="text" value="c:/Users/Public/MLModels/SentimentModel.zip" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>The full path to where we should save the trained model, in .zip format</description>
        </environment-variable>
        <environment-variable id="Ch4 Training Data Full Path" name="Ch4 Training Data Full Path" type="text" value="c:/Users/Public/Data/wikiDetoxAnnotated40kRows.tsv" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>The full path to the training data of the sentiment analysis model, in .tsv format</description>
        </environment-variable>
        <object-group id="83de9f14-c0c8-4be1-b576-619de41ae294" name="Ch4" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="104d778a-c54f-4a9b-8ddd-aba418123b79" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>